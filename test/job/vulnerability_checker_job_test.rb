require "test_helper"
require 'pry-byebug'
require 'net/http'

class VulnerabilityCheckerJobTest < ActiveJob::TestCase
  include ActionCable::TestHelper

  test "should catch a gemfile & yarn.lock" do
    stub_request(:get, "https://raw.githubusercontent.com/francois973/rails-mediless/master/Gemfile.lock").
      to_return(status: 200, body: file_fixture("Gemfile_invalid.lock").read)

    stub_request(:get, "https://raw.githubusercontent.com/francois973/rails-mediless/master/yarn.lock").
      to_return(status: 200, body: file_fixture("yarn_valid.lock").read)

    project = Project.create(url: "https://github.com/francois973/rails-mediless", name: "rails-mediless")
    VulnerabilityCheckerJob.perform_now(project.id)

    project.reload
    assert_equal project.ecosystems, { "NPM"=>"scanning", "RUBYGEMS"=>"scanning"}

    assert_broadcast_on(ProjectChannel.broadcasting_for(project), { "type" => "ecosystem:update",  "payload"=> { "NPM"=>"scanning", "RUBYGEMS"=>"scanning" }})
  end
end
