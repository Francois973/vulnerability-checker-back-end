require 'test_helper'
require 'minitest/autorun'
require 'securerandom'

class ProjectTest < ActiveSupport::TestCase

  # Test valid project

  test 'valid project' do
    project = Project.create(name: "rails", public: false, status: "New")

    assert project.name == "rails"
    assert project.status == "New"
    assert_not project.public
  end

  # Test presence of name

  test 'invalid without name' do
    project = Project.create(status: 'new', public: false)
    refute project.valid?, 'project is valid without a name'
    assert_not_nil project.errors[:name], 'no validation error for name present'
  end

  # Test presence of status

  test 'invalid without status' do
    project = Project.create(name: 'Mediless')
    refute project.status == nil
    assert_not_nil project.errors[:status]
  end

  # # Test subset of pagination

  # test 'return a subset projects bases on pagination' do
  #   assert 'API/V1/projects', params: { limit: 2 }

  #   expect(assert_response).to have_http_status(:succes)
  #   expect(assert_response.body.size).to eq(2)
  #   expect(assert_respond_to).to eq(
  #     [
  #       {
  #         'id' => 1,
  #         'name' => 'Mediless',
  #         'public' => 'false',
  #         'status' => 'New',
  #         'uuid' => "8843dd14-457e-4d22-9b35-c4c06c453ef3"
  #       }
  #     ]
  #   )
  # end
end
