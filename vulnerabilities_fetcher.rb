require "uri"
require "json"
require "net/http"
require "awesome_print"
require "pry-byebug"

QUERY = "
  query($after: String) {
    securityVulnerabilities(first: 100, after: $after) {
      pageInfo {
        endCursor
      }
      totalCount
      nodes {
        vulnerableVersionRange
        firstPatchedVersion {
          identifier
        }
        package {
          name
        }
        advisory {
          description
          ghsaId
          permalink
          summary
          publishedAt
        }
        severity
      }
    }
  }
  "

def fetch(cursor)
  ends_cursor = []
  loop do
    uri    = URI("https://api.github.com/graphql")
    params = { query:     QUERY,
               variables: { after: cursor } }
    # p after
    headers = {
      "Authorization" => "Bearer #{ENV['GITHUB_TOKEN']}",
      "Content-Type"  => "application/json",
      "Accept"        => "application/json"
    }
    http         = Net::HTTP.new(uri.host, uri.port)
    http.use_ssl = true
    response     = http.post(uri.path, params.to_json, headers)
    data         = JSON.parse(response.body)
    cursor       = data["data"]["securityVulnerabilities"]["pageInfo"]["endCursor"]
    datas        = data["data"]["securityVulnerabilities"]["nodes"]

    datas.each do |el|
      # binding.pry
      ap el["severity"] # severity
      ap el["package"]["name"] # stack
      ap el["advisory"]["summary"] # summary
      ap el["advisory"]["description"] # details
    end

    ap cursor

    ends_cursor.push(cursor)
    # ap ends_cursor
    ap ends_cursor.size
  end
end

params = QUERY["securityVulnerabilities"]["pageInfo"]

fetch(params)
