module Api
  module V1
    class ProjectsController < ApplicationController
      before_action :set_project, only: %i[destroy]
      def create
        @vulnerabilities = Vulnerability.all
        @project = Project.new(project_params)
        if @project.save
          find_url = @project.url
          find_lock_file(find_url)
          render json: @project.vulnerabilities, status: :created
        else
          render json: @project.errors, status: :unprocessable_entity
        end
      end

      def destroy
        @project.destroy
      end

      private

      def find_lock_file(find_url)
        array = find_url.split("/")
        # find_language_in_repository(find_url)
        files_types = ["mix.lock", "yarn.lock", "Gemfile.lock"]
        files_types.each do |file|
          url = URI("https://raw.githubusercontent.com/#{array[3]}/#{array[4]}/master/#{file}")
          # binding.pry
          res = Net::HTTP.get(url)
          @response = JSON.parse(res.to_json)
        end

        stacks_inside_lock_files = @response.split("\n")
        comparisons(stacks_inside_lock_files)
      end

      def comparisons(stacks_inside_lock_files)
        stacks_inside_lock_files.each do |stack|
          stack_without_version = without_version(stack)
          vulnerability = @vulnerabilities.find_by(stack: stack_without_version)
          next unless vulnerability

          @list = List.create!(project: @project, vulnerability:)
        end
      end

      def without_version(stack)
        stack = stack.strip
        stack.include?("(") ? stack.split(" ").first : stack
      end

      def set_project
        @project = Project.find(params[:id])
      end

      def project_params
        params.require(:project).permit(:name, :public, :status, :url)
      end
    end
  end
end
