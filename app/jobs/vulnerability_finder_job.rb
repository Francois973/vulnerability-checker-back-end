class VulnerabilityFinderJob < ApplicationJob
  queue_as :default

  def perform(project_id, ecosystem, file_content, vulnerabilities)
    project = Project.find(project_id)
    vulnerabilities.each do |vulnerability|
      sleep 0.5
      project.vulnerabilities << vulnerability
      binding.pry
      options = {serializer: VulnerabilitySerializer}
      serializable_resource = ActiveModelSerializers::SerializableResource.new(vulnerability, options)
      vulnerability_json = serializable_resource.as_json
      ProjectChannel.broadcast_to(project, type: "vulnerability:found", payload: vulnerability_json)
    end
    project.update_ecosystem_state(ecosystem, "completed")
  end
end
