class VulnerabilityFetcher
  def initialize; end

  def fetch
    call_api
    get_data(data)
  end

  private

  def get_data(data)
    ap data["data"]["securityVulnerabilities"]["nodes"]

    data["data"]["securityVulnerabilities"]["nodes"].each do |child|
      # binding.pry
      ap child["severity"] # Severity
      ap child["package"]["name"] # Stack
      ap child["advisory"]["summary"] # Summary
      ap child["advisory"]["description"] # Details
    end
  end

  def call_api
    uri = URI("https://api.github.com/graphql")
    params = { query:     @query,
               variables: { after: "Y3Vyc29yOnYyOpK5MjAyMi0wOS0yN1QwNTowMjo1MCswMjowMM2G4w==" } }
    # p after
    headers = {
      "Authorization" => "Bearer #{ENV['GITHUB_TOKEN']}",
      "Content-Type"  => "application/json",
      "Accept"        => "application/json"
    }
    http = Net::HTTP.new(uri.host, uri.port)
    http.use_ssl = true
    response = http.post(uri.path, params.to_json, headers)
    @data = JSON.parse(response.body)
  end

  def query_api
    @query = "
      query($after: String) {
        securityVulnerabilities(first: 100, after: $after) {
          pageInfo {
            endCursor
          }
          totalCount
          nodes {
            vulnerableVersionRange
            firstPatchedVersion {
              identifier
            }
            package {
              name
            }
            advisory {
              description
              ghsaId
              permalink
              summary
              publishedAt
            }
            severity
          }
        }
      }
      "
  end
end
